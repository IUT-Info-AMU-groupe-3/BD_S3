--question : --
--1)--

SELECT COLUMN_NAME
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME = 'PROF';

--2)--

SELECT OBJECT_NAME
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'FUNCTION'
OR OBJECT_TYPE = 'PROCEDURE';

--3)--

SELECT CONSTRAINT_NAME FROM USER_CONSTRAINTS;

--4)--

SELECT CONSTRAINT_NAME
FROM USER_CONSTRAINTS
JOIN USER_TAB_COLUMNS ON USER_TAB_COLUMNS.TABLE_NAME = USER_CONSTRAINTS.TABLE_NAME
WHERE DATA_TYPE = 'NUMBER';

--5)--

SELECT CONSTRAINT_NAME, COLUMN_NAME
FROM USER_CONSTRAINTS
JOIN USER_TAB_COLUMNS ON USER_TAB_COLUMNS.TABLE_NAME = USER_CONSTRAINTS.TABLE_NAME
WHERE DATA_TYPE = 'NUMBER';

--6)--

SELECT CONSTRAINT_NAME, COLUMNS_NAME,DATA_TYPE
FROM USER_CONSTRAINT CI, USER_TAB_COLUMNS ATT
WHERE CI.TABLE_NAME = ATT.TABLE_NAME
AND CI.COLUMN_NAME = ATT.COLUMN_NAME
AND CI.TABLE_NAME IN (SELECT TABLE_NAME
                      FROM USER_TAB_COLUMN C
                      WHERE C.DATA_TYPE = 'NUMBER');
                      
--7)--

SELECT CONSTRAINT_NAME, SEARCH_CONDITION
FROM USER_CONSTRAINTS
WHERE CONSTRAINT_TYPE = 'C';

--8)-

SELECT R1.COLUMN_NAME, R1.TABLE_NAME,R2.COLUMN_NAME,R2.TABLE_NAME
FROM USER_TAB_COLUMN R1, USER_TAB_COLUMN R2
WHERE R1.COLUMN_NAME = R2.COLUMN_NAME
AND R1.TABLE_NAME != R2.TABLE_NAME;

--9)--

SELECT C1.COLUMN_NAME, C1.TABLE_NAME, C2.COLUMN_NAME,C2.TABLE_NAME
FROM USER_TAB_COLUMN C1
JOIN USER_TAB_COLUMN C2 ON C1.COLUMN_NAME = C2.COLUMN_NAME
AND C1.TABLE_NAME > C2.TABLE_NAME

--10)--

CREATE VIEW PROF_INFO2 AS
SELECT NUMPROF, NOMPROF, PRENOM_PROF
FROM PROF P, ENSEIGNT E
WHERE P.NUM_PROF = E.NUM_PROF
AND E.NUM_ET IN (SELECT NUM_ET
		 FROM ETUDIANT
		 WHERE ANNEE = 2);

SELECT * FROM PROF_INFO2;

--11)--

CREATE VIEW DIS AS
SELECT * FROM MODULE
WHERE DISCIPLINE IN('INFORMATIQUE','GESTION','MATH')
WITH CHECK OPTION
INSERT INTO DIS(CODE, DISCIPLINE) VALUES(99,'SPORT');

--12)--

CREATE VIEW C_REPS AS
SELECT * FROM MODULE M
WHERE RESP IN (SELECT NUM_PROF FROM ENSEIGNT WHERE M.CODE = ENSEIGNT.CODE)
WITH CHECK OPTION;

--13)--

CREATE VIEW VERIF_ENS
AS
  SELECT  *
  FROM    ENSEIGNT
  WHERE   CODE      IN (SELECT CODE      FROM MODULE)
  AND     NUM_PROF  IN (SELECT NUM_PROF  FROM PROF)
  AND     NUM_ET    IN (SELECT NUM_ET    FROM ETUDIANT)
  
WITH CHECK OPTION;

--14)--

CREATE VIEW VERIF_MOD
AS
  SELECT *
  FROM MODULE
  WHERE CODE NOT IN (SELECT CODEPERE   FROM MODULE)
  AND   CODE NOT IN (SELECT CODE       FROM ENSEIGNT)
  AND   CODE NOT IN (SELECT CODE       FROM NOTATION)
  
WITH CHECK OPTION;


--15)--

GRANT SELECT
ON TABLE ETUDIANT
TO PUBLIC;

--17)--

GRANT SELECT,UPDATE
ON TABLE PROF
TO ET_1041;

--18)--



